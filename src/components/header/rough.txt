import React,{useState} from 'react';
import { Nav,Row,Col } from 'react-bootstrap';
import './navheader.css';
import LandingVideo from "../../assets/videos/anandham_teaser.mp4";
import CustomButton from '../shared/button/button';
import anandham_logo from "../../assets/logo/anandham_logo.png";

export default function NavHeader() {

  const [formData, setFormData] = useState({
    name: "",
    email: "",
    mobile: "",
  });

  const [errors, setErrors] = useState({});
  const [showSuccess, setShowSuccess] = useState(false);

  const handleChange = (e) => {
    const { name, value } = e.target;

    const updatedFormData = {
      ...formData,
      [name]: value,
    };

    setFormData(updatedFormData);
    validateForm(updatedFormData);
  };

  const validateForm = (formData) => {
    const newErrors = {};

    if (!formData.name.trim()) {
      newErrors.name = "Name is required";
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!formData.email.trim()) {
      newErrors.email = "Email is required";
    } else if (!emailRegex.test(formData.email)) {
      newErrors.email = "Invalid email address";
    }

    const mobileRegex = /^[0-9]{10}$/;
    if (!formData.mobile.trim()) {
      newErrors.mobile = "Mobile number is required";
    } else if (!mobileRegex.test(formData.mobile)) {
      newErrors.mobile = "Mobile number must be 10 digits";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const encodeForGoogleForms = (str) => {
    return encodeURIComponent(str).replace(/%20/g, "+");
  };

  const handleClick = () => {
    if (!validateForm(formData)) return;

    const SENDURL = `https://docs.google.com/forms/d/e/1FAIpQLScGm62E_yvpd3SCITNqJr2jRFtBE0QJLe1KP7tsfPlfDI8Iqg/formResponse?entry.1439694226=${encodeForGoogleForms(
      formData.name
    )}&entry.1816982461=${encodeForGoogleForms(
      formData.email
    )}&entry.1780835660=${encodeForGoogleForms(formData.mobile)}`;

    fetch(SENDURL, {
      method: "POST",
      mode: "no-cors",
    })
      .then(() => {
        setShowSuccess(true);
        alert("Thank you for showing your interset !...Our business team will reach you soon.")
        setFormData({ name: "", email: "", mobile: "" });
        setTimeout(() => {
          setShowSuccess(false);
        }, 5000);
      })
      .catch((error) => {
        console.error("Error submitting form:", error);
      });
  };


  return (
    <div className='nav-header-lap'>
        <div className="scrolling-text-container">
          <div className="scrolling-text">
            üöÄ ENQUIRE NOW FOR A FREE SITE VISIT - +91 89395 893889 üè°
          </div>
        </div>
        <br/><br/>
        <div className="main-wrapper position-relative">
        {/* ==== VIDEO SECTION ==== */}
        <div className="video-section-wrapper">
            <video className="bg-video" autoPlay={false} loop muted playsInline>
              <source src={LandingVideo} type="video/mp4" />
              Your browser does not support the video tag.
            </video>
            <div className="video-overlay"></div>
            <div className="nav-main-container white-bg position-absolute top-0 z-2 py-3 px-2">
                <div href="#" className="nav-header-logo">
                <a className="navbar-brand" href="/">
                    <img
                    className='home-logo-out'
                    src={anandham_logo}      
                    alt="Anandhamplots Logo"       
                    />
                </a>
                </div>              
                <div className="nav-header-content">
                <Nav>
                    <Nav.Link href="/" className="nav-header-text px-3">Home</Nav.Link>
                    <Nav.Link href="/" className="nav-header-text px-3">About Us</Nav.Link>
                    <Nav.Link href="/padappai" className="nav-header-text px-3">Projects</Nav.Link>
                    <Nav.Link href="/" className="nav-header-text px-3">Blogs</Nav.Link>
                    <Nav.Link href="/padappai" className="nav-header-text px-3">Core team</Nav.Link>
                    <Nav.Link href="/padappai" className="nav-header-text px-3">Seller spot</Nav.Link>
                    <Nav.Link href="/padappai" className="nav-header-text px-3">Careers</Nav.Link>
                    <Nav.Link href="/" className="nav-header-text px-3">Contact Us</Nav.Link>
                </Nav>
                </div>            
            </div>           
        </div>

        {/* ==== FORM CONTAINER (NOW PROPERLY POSITIONED) ==== */}
        <Row className="form-container light-bg shadow rounded p-3 px-md-4 d-flex flex-column flex-md-row align-items-center justify-content-center">
            <Col>
            <input
                type="text"
                name="name"
                placeholder="Name"
                className={`form-control m-2 ${errors.name ? "is-invalid" : ""}`}
                value={formData.name}
                onChange={handleChange}
            />
            {errors.name && <div className="invalid-feedback">{errors.name}</div>}
            </Col>

            <Col>
            <input
                type="text"
                name="mobile"
                placeholder="Mobile"
                className={`form-control m-2 ${errors.mobile ? "is-invalid" : ""}`}
                value={formData.mobile}
                onChange={handleChange}
            />
            {errors.mobile && (
                <div className="invalid-feedback">{errors.mobile}</div>
            )}
            </Col>

            <Col>
            <input
                type="email"
                name="email"
                placeholder="Email"
                className={`form-control m-2 ${errors.email ? "is-invalid" : ""}`}
                value={formData.email}
                onChange={handleChange}
            />
            {errors.email && (
                <div className="invalid-feedback">{errors.email}</div>
            )}
            </Col>

            <Col>
            <CustomButton
                title="Submit"
                textcolor="btn"
                btnBg="white"
                textWeight={700}
                btnMinWidth="10rem"
                btnBorderRadius="20px"
                handleClick={handleClick}
            />
            </Col>
        </Row>

        {showSuccess && (
            <div className="text-success text-center mt-3">
            Form submitted successfully!
            </div>
        )}
        </div>
        <br/><br/><br/>
    </div>
  );
}



 
.nav-header-lap{
  overflow-y: hidden;
} 
.nav-header-lap .main-wrapper {
    position: relative;
  }
.nav-header-lap  .nav-main-container{
    display: grid;
    grid-template-columns: 2fr 10fr;
    width: 90%;
    margin-left: 5%;
  }
  .nav-header-lap .nav-header-logo{
    margin: auto;
  }
  .nav-header-lap .nav-header-logo img{
      width: 10rem;
  }
  
  .nav-header-lap .nav-header-content{
    margin: auto !important;
  }
  
  /* VIDEO SECTION */
  .nav-header-lap .video-section-wrapper {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
  }
  
  .nav-header-lap .bg-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
  }
  
  .nav-header-lap .video-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.4);
    z-index: 1;
  }
  
  /* FORM FLOATS BETWEEN VIDEO & HERO */
  .nav-header-lap .form-container {
    position: absolute; 
    bottom: 10px;
    /* top: calc(100vh - 50px);  */
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    width: 90%;
    border-radius: 0.75rem;
    box-shadow: 0 5px 25px var(--color-card-box-shadow);
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 1rem;
    gap: 0.5rem;
  }
  
  .nav-header-lap .form-control{
    border-radius: 20px; 
  }
  
  
  .nav-header-lap .navbar-toggler{
    color: var(--color-green-bg) !important;
    border: 1px solid var(--color-green-bg);
  }
  
  .nav-header-lap .text-padding-content{
    padding: 4rem 18%;
  }

  .nav-header-lap .scrolling-text-container {
    width: 100%;
    overflow: hidden;
    background-color: #f0f0f0; /* Optional background */
    padding: 10px 0;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1000;
  }
  
  .nav-header-lap .scrolling-text {
    display: inline-block;
    white-space: nowrap;
    padding-left: 100%;
    animation: scroll-left 15s linear infinite;
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    color: #333;
  }
  
  @keyframes scroll-left {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-100%);
    }
  }